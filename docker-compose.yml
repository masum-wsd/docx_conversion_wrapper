services:
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
#    container_name: elasticsearch
#    environment:
#      - node.name=elasticsearch
#      - discovery.type=single-node
#      - cluster.name=docker-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
#      - xpack.security.enabled=false
##      - xpack.security.http.ssl.enabled=false
##      - xpack.security.transport.ssl.enabled=false
##      - ELASTIC_PASSWORD=password
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    ports:
#      - "9200:9200"
#    volumes:
#      - es_data:/usr/share/elasticsearch/data
#    networks:
#      - efk

#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.17.0
#    container_name: kibana
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
##      - ELASTICSEARCH_USERNAME=elastic
##      - ELASTICSEARCH_PASSWORD=password
##      - xpack.security.enabled=true
##      - xpack.security.encryptionKey="something_at_least_32_characters"
##      - xpack.security.session.idleTimeout="24h"
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      - efk
#  
#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.17.0
#    container_name: logstash
#    volumes:
#      - ./monitoring/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
#    ports:
#      - "5000:5000"
#    depends_on:
#      - elasticsearch
    
  
#  filebeat:
#    image: elastic/filebeat:7.17.24
#    container_name: filebeat
#    command: [ "filebeat", "-e", "--strict.perms=false" ]
#    volumes:
#      - ./monitoring/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
#      # Mount the directory where your logs are stored
#      - ./logs:/usr/share/filebeat/logs:ro
#      # For internal container paths
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      # Docker logs access
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /var/log/syslog:/var/log/syslog:ro
#    networks:
#      - efk
#    depends_on:
#      - elasticsearch
#      - kibana
    
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - grafana
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      - grafana
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: ['-config.file=/etc/loki/local-config.yaml']
    restart: unless-stopped
    networks:
      - grafana
  
#  zipkin:
#    image: ghcr.io/openzipkin/zipkin-slim:latest
#    container_name: zipkin
#    environment:
#      - STORAGE_TYPE=mem
#    ports:
#      - "9411:9411"
  
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ '-config.file=/etc/tempo.yaml' ]
    volumes:
      - ./monitoring/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./monitoring/tempo/tempo-data:/tmp/tempo
    ports:
      - '3200:3200' # Tempo
      - '9411:9411' # zipkin
    networks:
      - grafana

  minio:
    image: docker.io/bitnami/minio:latest
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
#    networks:
#      - efk
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      
networks:
#  efk:
#    driver: bridge
  grafana:
    driver: bridge

volumes:
#  es_data:
#    driver: local
  minio_data:
    driver: local
